# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import Any, Optional

from azure.core.configuration import Configuration
from azure.core.pipeline import policies

from .._version import VERSION


class MapsClientConfiguration(Configuration):
    """Configuration for MapsClient.

    Note that all parameters used to create this instance are saved as instance
    attributes.

    :param subscription_key: One of the Azure Maps keys provided from an Azure Map Account. Please refer to this `article <https://docs.microsoft.com/azure/azure-maps/how-to-manage-authentication>`_ for details on how to manage authentication.
    :type subscription_key: str
    :param x_ms_client_id: Specifies which account is intended for usage in conjunction with the Azure AD security model.  It represents a unique ID for the Azure Maps account and can be retrieved from Azure Maps management  plane Account API. To use Azure AD security in Azure Maps see the following `articles <https://aka.ms/amauthdetails>`_ for guidance.
    :type x_ms_client_id: str
    """

    def __init__(
        self,
        subscription_key: Optional[str] = None,
        x_ms_client_id: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        super(MapsClientConfiguration, self).__init__(**kwargs)

        self.subscription_key = subscription_key
        self.x_ms_client_id = x_ms_client_id
        kwargs.setdefault('sdk_moniker', 'maps-service/{}'.format(VERSION))
        self._configure(**kwargs)

    def _configure(
        self,
        **kwargs: Any
    ) -> None:
        self.user_agent_policy = kwargs.get('user_agent_policy') or policies.UserAgentPolicy(**kwargs)
        self.headers_policy = kwargs.get('headers_policy') or policies.HeadersPolicy(**kwargs)
        self.proxy_policy = kwargs.get('proxy_policy') or policies.ProxyPolicy(**kwargs)
        self.logging_policy = kwargs.get('logging_policy') or policies.NetworkTraceLoggingPolicy(**kwargs)
        self.http_logging_policy = kwargs.get('http_logging_policy') or policies.HttpLoggingPolicy(**kwargs)
        self.retry_policy = kwargs.get('retry_policy') or policies.AsyncRetryPolicy(**kwargs)
        self.custom_hook_policy = kwargs.get('custom_hook_policy') or policies.CustomHookPolicy(**kwargs)
        self.redirect_policy = kwargs.get('redirect_policy') or policies.AsyncRedirectPolicy(**kwargs)
        self.authentication_policy = kwargs.get('authentication_policy')
