# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import Optional

from azure.core.exceptions import HttpResponseError
import msrest.serialization


class DatasetDetailInfo(msrest.serialization.Model):
    """Detail information for the dataset.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar created: The created timestamp for the dataset.
    :vartype created: str
    :ivar dataset_id: The id for the dataset.
    :vartype dataset_id: str
    :ivar ontology: The ontology version of this dataset.
    :vartype ontology: str
    :ivar description: The description for the dataset.
    :vartype description: str
    :param dataset_sources: Information about the details of the create request for the dataset.
    :type dataset_sources: ~azure.maps.dataset.models.DatasetSources
    :ivar feature_counts: The feature counts for the dataset.
    :vartype feature_counts: any
    """

    _validation = {
        'created': {'readonly': True},
        'dataset_id': {'readonly': True},
        'ontology': {'readonly': True},
        'description': {'readonly': True},
        'feature_counts': {'readonly': True},
    }

    _attribute_map = {
        'created': {'key': 'created', 'type': 'str'},
        'dataset_id': {'key': 'datasetId', 'type': 'str'},
        'ontology': {'key': 'ontology', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
        'dataset_sources': {'key': 'datasetSources', 'type': 'DatasetSources'},
        'feature_counts': {'key': 'featureCounts', 'type': 'object'},
    }

    def __init__(
        self,
        *,
        dataset_sources: Optional["DatasetSources"] = None,
        **kwargs
    ):
        super(DatasetDetailInfo, self).__init__(**kwargs)
        self.created = None
        self.dataset_id = None
        self.ontology = None
        self.description = None
        self.dataset_sources = dataset_sources
        self.feature_counts = None


class DatasetListResponse(msrest.serialization.Model):
    """The response model for the Dataset List API. The response body will contain a list of all the previously created datasets.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar datasets: A list of all the previously created datasets.
    :vartype datasets: list[~azure.maps.dataset.models.DatasetDetailInfo]
    :ivar next_link: If present, the location of the next page of data.
    :vartype next_link: str
    """

    _validation = {
        'datasets': {'readonly': True},
        'next_link': {'readonly': True},
    }

    _attribute_map = {
        'datasets': {'key': 'datasets', 'type': '[DatasetDetailInfo]'},
        'next_link': {'key': 'nextLink', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(DatasetListResponse, self).__init__(**kwargs)
        self.datasets = None
        self.next_link = None


class DatasetSources(msrest.serialization.Model):
    """Information about the details of the create request for the dataset.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar conversion_ids: The list of ``conversionId`` that were used to create the dataset.
    :vartype conversion_ids: list[str]
    :ivar append_dataset_id: The dataset that was appended to to create the current dataset.
    :vartype append_dataset_id: str
    """

    _validation = {
        'conversion_ids': {'readonly': True},
        'append_dataset_id': {'readonly': True},
    }

    _attribute_map = {
        'conversion_ids': {'key': 'conversionIds', 'type': '[str]'},
        'append_dataset_id': {'key': 'appendDatasetId', 'type': 'str'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(DatasetSources, self).__init__(**kwargs)
        self.conversion_ids = None
        self.append_dataset_id = None


class ErrorAdditionalInfo(msrest.serialization.Model):
    """The resource management error additional info.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar type: The additional info type.
    :vartype type: str
    :ivar info: The additional info.
    :vartype info: any
    """

    _validation = {
        'type': {'readonly': True},
        'info': {'readonly': True},
    }

    _attribute_map = {
        'type': {'key': 'type', 'type': 'str'},
        'info': {'key': 'info', 'type': 'object'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(ErrorAdditionalInfo, self).__init__(**kwargs)
        self.type = None
        self.info = None


class ErrorDetail(msrest.serialization.Model):
    """The error detail.

    Variables are only populated by the server, and will be ignored when sending a request.

    :ivar code: The error code.
    :vartype code: str
    :ivar message: The error message.
    :vartype message: str
    :ivar target: The error target.
    :vartype target: str
    :ivar details: The error details.
    :vartype details: list[~azure.maps.dataset.models.ErrorDetail]
    :ivar additional_info: The error additional info.
    :vartype additional_info: list[~azure.maps.dataset.models.ErrorAdditionalInfo]
    """

    _validation = {
        'code': {'readonly': True},
        'message': {'readonly': True},
        'target': {'readonly': True},
        'details': {'readonly': True},
        'additional_info': {'readonly': True},
    }

    _attribute_map = {
        'code': {'key': 'code', 'type': 'str'},
        'message': {'key': 'message', 'type': 'str'},
        'target': {'key': 'target', 'type': 'str'},
        'details': {'key': 'details', 'type': '[ErrorDetail]'},
        'additional_info': {'key': 'additionalInfo', 'type': '[ErrorAdditionalInfo]'},
    }

    def __init__(
        self,
        **kwargs
    ):
        super(ErrorDetail, self).__init__(**kwargs)
        self.code = None
        self.message = None
        self.target = None
        self.details = None
        self.additional_info = None


class ErrorResponse(msrest.serialization.Model):
    """Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).

    :param error: The error object.
    :type error: ~azure.maps.dataset.models.ErrorDetail
    """

    _attribute_map = {
        'error': {'key': 'error', 'type': 'ErrorDetail'},
    }

    def __init__(
        self,
        *,
        error: Optional["ErrorDetail"] = None,
        **kwargs
    ):
        super(ErrorResponse, self).__init__(**kwargs)
        self.error = error


class LongRunningOperationResult(msrest.serialization.Model):
    """The response model for a Long-Running Operations API.

    Variables are only populated by the server, and will be ignored when sending a request.

    :param operation_id: The Id for this long-running operation.
    :type operation_id: str
    :ivar status: The status state of the request. Possible values include: "NotStarted",
     "Running", "Failed", "Succeeded".
    :vartype status: str or ~azure.maps.dataset.models.LroStatus
    :ivar created: The created timestamp.
    :vartype created: str
    :ivar resource_location: The location URI for details about the created resource. This is only
     provided when the request was successfully completed.
    :vartype resource_location: str
    :param error: The error detail.
    :type error: ~azure.maps.dataset.models.ErrorDetail
    :param warning: The error detail.
    :type warning: ~azure.maps.dataset.models.ErrorDetail
    """

    _validation = {
        'status': {'readonly': True},
        'created': {'readonly': True},
        'resource_location': {'readonly': True},
    }

    _attribute_map = {
        'operation_id': {'key': 'operationId', 'type': 'str'},
        'status': {'key': 'status', 'type': 'str'},
        'created': {'key': 'created', 'type': 'str'},
        'resource_location': {'key': 'resourceLocation', 'type': 'str'},
        'error': {'key': 'error', 'type': 'ErrorDetail'},
        'warning': {'key': 'warning', 'type': 'ErrorDetail'},
    }

    def __init__(
        self,
        *,
        operation_id: Optional[str] = None,
        error: Optional["ErrorDetail"] = None,
        warning: Optional["ErrorDetail"] = None,
        **kwargs
    ):
        super(LongRunningOperationResult, self).__init__(**kwargs)
        self.operation_id = operation_id
        self.status = None
        self.created = None
        self.resource_location = None
        self.error = error
        self.warning = warning
